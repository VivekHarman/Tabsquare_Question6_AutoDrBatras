///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace DrBaras_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The BookAppointment recording.
    /// </summary>
    [TestModule("8227e676-f4aa-4ee6-aef8-587282865e9f", ModuleType.Recording, 1)]
    public partial class BookAppointment : ITestModule
    {
        /// <summary>
        /// Holds an instance of the DrBaras_TestRepository repository.
        /// </summary>
        public static DrBaras_TestRepository repo = DrBaras_TestRepository.Instance;

        static BookAppointment instance = new BookAppointment();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public BookAppointment()
        {
            PatientName = "JamesBond";
            PhoneNumber = "1234567890";
            email = "JamesBond@yahoo.com";
            City = "AGRA";
            ClincPlace = "121-C_M G ROAD AGRA";
            AppointmentDay = "2022-03-31";
            AppTime = "10:00AM-11:00AM";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static BookAppointment Instance
        {
            get { return instance; }
        }

#region Variables

        string _PatientName;

        /// <summary>
        /// Gets or sets the value of variable PatientName.
        /// </summary>
        [TestVariable("9ce1457f-75a2-4359-9020-49ba56bd2ee1")]
        public string PatientName
        {
            get { return _PatientName; }
            set { _PatientName = value; }
        }

        string _PhoneNumber;

        /// <summary>
        /// Gets or sets the value of variable PhoneNumber.
        /// </summary>
        [TestVariable("524b6116-9706-40f4-9144-60ff6f44cb71")]
        public string PhoneNumber
        {
            get { return _PhoneNumber; }
            set { _PhoneNumber = value; }
        }

        string _email;

        /// <summary>
        /// Gets or sets the value of variable email.
        /// </summary>
        [TestVariable("a0347ea9-9d40-4aba-987b-cd8afbacb7d5")]
        public string email
        {
            get { return _email; }
            set { _email = value; }
        }

        string _AppointmentDay;

        /// <summary>
        /// Gets or sets the value of variable AppointmentDay.
        /// </summary>
        [TestVariable("ccf6e822-807d-40b9-98ca-baac40152326")]
        public string AppointmentDay
        {
            get { return _AppointmentDay; }
            set { _AppointmentDay = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable City.
        /// </summary>
        [TestVariable("e9545214-4fac-4d7a-afa1-da4c7236d295")]
        public string City
        {
            get { return repo.City; }
            set { repo.City = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable ClincPlace.
        /// </summary>
        [TestVariable("2d3f846d-5432-46b6-91d8-315d722a3469")]
        public string ClincPlace
        {
            get { return repo.ClincPlace; }
            set { repo.ClincPlace = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable AppTime.
        /// </summary>
        [TestVariable("99558a7c-a91a-4b7b-9452-5516d7f65682")]
        public string AppTime
        {
            get { return repo.AppTime; }
            set { repo.AppTime = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.BookAppointment.btn_Consultnow'", repo.ApplicationUnderTest.BookAppointment.btn_ConsultnowInfo, new ActionTimeout(5000), new RecordItemIndex(0));
            repo.ApplicationUnderTest.BookAppointment.btn_ConsultnowInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.BookAppointment.btn_Consultnow'.", repo.ApplicationUnderTest.BookAppointment.btn_ConsultnowInfo, new RecordItemIndex(1));
            Validate.Exists(repo.ApplicationUnderTest.BookAppointment.btn_ConsultnowInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BookAppointment.btn_Consultnow' at Center.", repo.ApplicationUnderTest.BookAppointment.btn_ConsultnowInfo, new RecordItemIndex(2));
            repo.ApplicationUnderTest.BookAppointment.btn_Consultnow.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Success, "User", "ConsultNow button Available", new RecordItemIndex(3));
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.BookAppointment.header_BookDocConsult'", repo.ApplicationUnderTest.BookAppointment.header_BookDocConsultInfo, new ActionTimeout(10000), new RecordItemIndex(4));
            repo.ApplicationUnderTest.BookAppointment.header_BookDocConsultInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.BookAppointment.header_BookDocConsult'.", repo.ApplicationUnderTest.BookAppointment.header_BookDocConsultInfo, new RecordItemIndex(5));
            Validate.Exists(repo.ApplicationUnderTest.BookAppointment.header_BookDocConsultInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Success, "User", "Book Consultation page loaded successfully", new RecordItemIndex(6));
            
            // Enter Personal details
            Report.Log(ReportLevel.Info, "Section", "Enter Personal details", new RecordItemIndex(7));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.BookAppointment.textbox_Name'.", repo.ApplicationUnderTest.BookAppointment.textbox_NameInfo, new RecordItemIndex(8));
            Validate.Exists(repo.ApplicationUnderTest.BookAppointment.textbox_NameInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$PatientName' on item 'ApplicationUnderTest.BookAppointment.textbox_Name'.", repo.ApplicationUnderTest.BookAppointment.textbox_NameInfo, new RecordItemIndex(9));
            repo.ApplicationUnderTest.BookAppointment.textbox_Name.Element.SetAttributeValue("Value", PatientName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.BookAppointment.textbox_Phone'.", repo.ApplicationUnderTest.BookAppointment.textbox_PhoneInfo, new RecordItemIndex(10));
            Validate.Exists(repo.ApplicationUnderTest.BookAppointment.textbox_PhoneInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$PhoneNumber' on item 'ApplicationUnderTest.BookAppointment.textbox_Phone'.", repo.ApplicationUnderTest.BookAppointment.textbox_PhoneInfo, new RecordItemIndex(11));
            repo.ApplicationUnderTest.BookAppointment.textbox_Phone.Element.SetAttributeValue("Value", PhoneNumber);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.BookAppointment.textbox_email'.", repo.ApplicationUnderTest.BookAppointment.textbox_emailInfo, new RecordItemIndex(12));
            Validate.Exists(repo.ApplicationUnderTest.BookAppointment.textbox_emailInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$email' on item 'ApplicationUnderTest.BookAppointment.textbox_email'.", repo.ApplicationUnderTest.BookAppointment.textbox_emailInfo, new RecordItemIndex(13));
            repo.ApplicationUnderTest.BookAppointment.textbox_email.Element.SetAttributeValue("Value", email);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.BookAppointment.checkbox_TandC'.", repo.ApplicationUnderTest.BookAppointment.checkbox_TandCInfo, new RecordItemIndex(14));
            Validate.Exists(repo.ApplicationUnderTest.BookAppointment.checkbox_TandCInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BookAppointment.checkbox_TandC' at Center.", repo.ApplicationUnderTest.BookAppointment.checkbox_TandCInfo, new RecordItemIndex(15));
            repo.ApplicationUnderTest.BookAppointment.checkbox_TandC.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.BookAppointment.btnNext'.", repo.ApplicationUnderTest.BookAppointment.btnNextInfo, new RecordItemIndex(16));
            Validate.Exists(repo.ApplicationUnderTest.BookAppointment.btnNextInfo);
            Delay.Milliseconds(0);
            
            ClickNextButton();
            Delay.Milliseconds(0);
            
            // Select Booking Details
            Report.Log(ReportLevel.Info, "Section", "Select Booking Details", new RecordItemIndex(18));
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'ApplicationUnderTest.BookAppointment.AppointmentOpt.SelectCity'", repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.SelectCityInfo, new ActionTimeout(60000), new RecordItemIndex(19));
            repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.SelectCityInfo.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.BookAppointment.AppointmentOpt.SelectCity'.", repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.SelectCityInfo, new RecordItemIndex(20));
            Validate.Exists(repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.SelectCityInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BookAppointment.AppointmentOpt.SelectCity' at Center.", repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.SelectCityInfo, new RecordItemIndex(21));
            repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.SelectCity.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking EnsureVisible() on item 'ApplicationUnderTest.BookAppointment.AppointmentOpt.CityDD'.", repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.CityDDInfo, new RecordItemIndex(22));
            repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.CityDD.EnsureVisible();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BookAppointment.AppointmentOpt.CityDD' at Center.", repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.CityDDInfo, new RecordItemIndex(23));
            repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.CityDD.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BookAppointment.AppointmentOpt.SelectClinic' at Center.", repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.SelectClinicInfo, new RecordItemIndex(24));
            repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.SelectClinic.Click();
            Delay.Milliseconds(0);
            
            SelectClinic(ClincPlace);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(26));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BookAppointment.AppointmentOpt.AppointMentDay' at Center.", repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.AppointMentDayInfo, new RecordItemIndex(27));
            repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.AppointMentDay.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Value to '$AppointmentDay' on item 'ApplicationUnderTest.BookAppointment.AppointmentOpt.AppointMentDay'.", repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.AppointMentDayInfo, new RecordItemIndex(28));
            repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.AppointMentDay.Element.SetAttributeValue("Value", AppointmentDay);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(29));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BookAppointment.AppointmentOpt.AppointMentTime' at Center.", repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.AppointMentTimeInfo, new RecordItemIndex(30));
            repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.AppointMentTime.Click();
            Delay.Milliseconds(0);
            
            SelectAppTime(AppTime);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(32));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.BookAppointment.AppointmentOpt.PayentTtype' at Center.", repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.PayentTtypeInfo, new RecordItemIndex(33));
            repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.PayentTtype.Click();
            Delay.Milliseconds(0);
            
            selectPaytype();
            Delay.Milliseconds(0);
            
            ClickConfApp();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30s to exist. Associated repository item: 'ApplicationUnderTest.BookAppointment.AppointmentOpt.AppConfirmation'", repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.AppConfirmationInfo, new ActionTimeout(30000), new RecordItemIndex(36));
            repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.AppConfirmationInfo.WaitForExists(30000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.BookAppointment.AppointmentOpt.AppConfirmation'.", repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.AppConfirmationInfo, new RecordItemIndex(37));
            Validate.Exists(repo.ApplicationUnderTest.BookAppointment.AppointmentOpt.AppConfirmationInfo);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}

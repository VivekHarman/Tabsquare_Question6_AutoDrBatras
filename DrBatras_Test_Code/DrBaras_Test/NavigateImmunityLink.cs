///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace DrBaras_Test
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The NavigateImmunityLink recording.
    /// </summary>
    [TestModule("20d12d78-60e4-4e64-9cbd-3aa15b87f2d7", ModuleType.Recording, 1)]
    public partial class NavigateImmunityLink : ITestModule
    {
        /// <summary>
        /// Holds an instance of the DrBaras_TestRepository repository.
        /// </summary>
        public static DrBaras_TestRepository repo = DrBaras_TestRepository.Instance;

        static NavigateImmunityLink instance = new NavigateImmunityLink();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public NavigateImmunityLink()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static NavigateImmunityLink Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            // Navigate to Immunity Link
            Report.Log(ReportLevel.Info, "Section", "Navigate to Immunity Link", new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 10s to exist. Associated repository item: 'ApplicationUnderTest.HomePage.link_Treatments'", repo.ApplicationUnderTest.HomePage.link_TreatmentsInfo, new ActionTimeout(10000), new RecordItemIndex(1));
            repo.ApplicationUnderTest.HomePage.link_TreatmentsInfo.WaitForExists(10000);
            
            Report.Log(ReportLevel.Info, "User", "Treatments link is visible on the screen", new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Move item 'ApplicationUnderTest.HomePage.link_Treatments' at Center.", repo.ApplicationUnderTest.HomePage.link_TreatmentsInfo, new RecordItemIndex(3));
            repo.ApplicationUnderTest.HomePage.link_Treatments.MoveTo();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(4));
            Delay.Duration(2000, false);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.link_Treatments' at Center.", repo.ApplicationUnderTest.HomePage.link_TreatmentsInfo, new RecordItemIndex(5));
            //repo.ApplicationUnderTest.HomePage.link_Treatments.Click();
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 2s to exist. Associated repository item: 'ApplicationUnderTest.HomePage.UIList.LinkCh'", repo.ApplicationUnderTest.HomePage.UIList.LinkChInfo, new ActionTimeout(2000), new RecordItemIndex(6));
            repo.ApplicationUnderTest.HomePage.UIList.LinkChInfo.WaitForExists(2000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.UIList.LinkCh' at Center.", repo.ApplicationUnderTest.HomePage.UIList.LinkChInfo, new RecordItemIndex(7));
            repo.ApplicationUnderTest.HomePage.UIList.LinkCh.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 2s.", new RecordItemIndex(8));
            Delay.Duration(2000, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.HomePage.UIList.Submenu.Link_Immunity'", repo.ApplicationUnderTest.HomePage.UIList.Submenu.Link_ImmunityInfo, new ActionTimeout(5000), new RecordItemIndex(9));
            repo.ApplicationUnderTest.HomePage.UIList.Submenu.Link_ImmunityInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.HomePage.UIList.Submenu.Link_Immunity' at Center.", repo.ApplicationUnderTest.HomePage.UIList.Submenu.Link_ImmunityInfo, new RecordItemIndex(10));
            repo.ApplicationUnderTest.HomePage.UIList.Submenu.Link_Immunity.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Success, "User", "User Clicked on the Immunity Link", new RecordItemIndex(11));
            
            // Click Chat Window and Close
            Report.Log(ReportLevel.Info, "Section", "Click Chat Window and Close", new RecordItemIndex(12));
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 1m to exist. Associated repository item: 'ApplicationUnderTest.ChatWindow'", repo.ApplicationUnderTest.ChatWindow.SelfInfo, new ActionTimeout(60000), new RecordItemIndex(13));
            repo.ApplicationUnderTest.ChatWindow.SelfInfo.WaitForExists(60000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.ChatWindow'.", repo.ApplicationUnderTest.ChatWindow.SelfInfo, new RecordItemIndex(14));
            Validate.Exists(repo.ApplicationUnderTest.ChatWindow.SelfInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Success, "User", "chat window exist on the page", new RecordItemIndex(15));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ChatWindow' at Center.", repo.ApplicationUnderTest.ChatWindow.SelfInfo, new RecordItemIndex(16));
            repo.ApplicationUnderTest.ChatWindow.Self.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'ApplicationUnderTest.ChatBox'", repo.ApplicationUnderTest.ChatBox.SelfInfo, new ActionTimeout(5000), new RecordItemIndex(17));
            repo.ApplicationUnderTest.ChatBox.SelfInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'ApplicationUnderTest.ChatBox'.", repo.ApplicationUnderTest.ChatBox.SelfInfo, new RecordItemIndex(18));
            Validate.Exists(repo.ApplicationUnderTest.ChatBox.SelfInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ApplicationUnderTest.ChatBox.CloseBtn' at Center.", repo.ApplicationUnderTest.ChatBox.CloseBtnInfo, new RecordItemIndex(19));
            repo.ApplicationUnderTest.ChatBox.CloseBtn.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Success, "User", "Chat Box window Closed Successfully.", new RecordItemIndex(20));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
